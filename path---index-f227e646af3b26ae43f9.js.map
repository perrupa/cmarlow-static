{"version":3,"sources":["webpack:///path---index-f227e646af3b26ae43f9.js","webpack:///./.cache/json/index.json"],"names":["webpackJsonp","336","module","exports","data","allMarkdownRemark","edges","node","excerpt","html","id","frontmatter","date","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,QAAA,0PAAAC,KAAA,8qjBAAinlBC,GAAA,mHAAAC,aAA2KC,KAAA,2BAAAC,KAAA,uCAAAC,MAAA,uDAA+IP,MAAQC,QAAA,0PAAAC,KAAA,g8KAAguLC,GAAA,kIAAAC,aAAySC,KAAA,2BAAAC,KAAA,sDAAAC,MAAA,4CAAmJP,MAAQC,QAAA,0BAAAC,KAAA,wLAAAC,GAAA,4GAAAC,aAAyWC,KAAA,2BAAAC,KAAA,gCAAAC,MAAA,6BAA8GP,MAAQC,QAAA,qDAAAC,KAAA,wfAAAC,GAAA,0GAAAC,aAAktBC,KAAA,2BAAAC,KAAA,8BAAAC,MAAA,4BAA0GC","file":"path---index-f227e646af3b26ae43f9.js","sourcesContent":["webpackJsonp([142629428675168],{\n\n/***/ 336:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"I've found it extremely helpful when writing React components using hooks to create new abstractions for my multiple hooks by grouping them into a single \\\"custom hook\\\". Reasoning about a single hook is very simple (literally composed of a single…\",\"html\":\"<p>I've found it extremely helpful when writing React components using hooks to create new abstractions for my multiple hooks by grouping them into a single \\\"custom hook\\\". Reasoning about a single hook is very simple (literally composed of a single element), but when your single component needs to keep track of multiple pieces of states, or actions that act on that state, things become tend to become more complex.</p>\\n<p>At this point it's a great idea to abstract away that complexity, exposing only what is relevant in the context of the consumer.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* MyApp.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">close</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Modal isVisible<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>isVisible<span class=\\\"token punctuation\\\">}</span> closeButton<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>actions<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span><span class=\\\"token constant\\\">I</span>'m <span class=\\\"token keyword\\\">in</span> a dialog<span class=\\\"token operator\\\">!</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>actions<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Close<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Modal<span class=\\\"token operator\\\">></span>\\n\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>actions<span class=\\\"token punctuation\\\">.</span>open<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Open dialog<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2>Step one: create an empty hook</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// add the hook</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useModalVisibility<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./use-modal-visibility'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// call it from your component</span>\\n  <span class=\\\"token keyword\\\">const</span> unusedValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Everything else unchanged....</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">close</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// rendering...</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>☝️  This shouldn't affect our component at all.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* use-modal-visibility.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>This doesn't achieve much, but it doesn't break our code and our component should continue to work as normal 🤞</p>\\n<h2>Step two: Start pulling over hooks</h2>\\n<p>Now let's move over the bare minimum from our component into the hook. We should be extra careful to make sure that our tests still pass (you are testing your components, right?) and our component still works.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// add the hook</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useModalVisibility<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./use-modal-visibility'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// call it from your component</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Use the value/functions from useModalVisibility</span>\\n  <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">close</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// rendering...</span></code></pre>\\n      </div>\\n<p>All our custom hook is doing so far is holding the <code class=\\\"language-text\\\">useState</code> logic, but not doing more than being a simple wrapper.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* use-modal-visibility.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>Step three: Finalize the API/complete the abstraction</h2>\\n<p>Now let's move over the bare minimum from our component into the hook. We should be extra careful to make sure that our tests still pass (you are testing your components, right?) and our component still works.</p>\\n<blockquote>\\n<p>Since the <code class=\\\"language-text\\\">actions</code> block has no external referneces, we know that we can move these actions into our hook.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* use-modal-visibility.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// isolate the implementation logic</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">open</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">close</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>open<span class=\\\"token punctuation\\\">,</span> close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>Having pulled all the state logic successfully into the custom hook, our stateless component is starting to look a whole lot more stateless again!</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// add the hook</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useModalVisibility<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./use-modal-visibility'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// call it from your component</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>open<span class=\\\"token punctuation\\\">,</span> close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Modal isVisible<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>isVisible<span class=\\\"token punctuation\\\">}</span> closeButton<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span><span class=\\\"token constant\\\">I</span>'m <span class=\\\"token keyword\\\">in</span> a dialog<span class=\\\"token operator\\\">!</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Close<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Modal<span class=\\\"token operator\\\">></span>\\n\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>open<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Open dialog<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2019-12-15 Custom React Hooks.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2019-12-15T00:00:00.000Z\",\"path\":\"/posts/2019-12-15 Custom React Hooks\",\"title\":\"Refactoring a React component using custom hooks\"}}},{\"node\":{\"excerpt\":\"I wanted to add compile-time syntax highlighting to the code sections of this blog today, so I took a look around. I was already using gatsby-transformer-remark for markdown to HTML conversion of blog posts, so I needed to add a plugin that would…\",\"html\":\"<p>I wanted to add compile-time syntax highlighting to the code sections of this blog today, so I took a look around.</p>\\n<p>I was already using gatsby-transformer-remark for markdown to HTML conversion of blog posts, so I needed to add a plugin that would parse my code blocks into styleable html. Enter the handy Gatsby plugin <a href=\\\"https://github.com/chasm/gatsby-remark-prismjs\\\">gatsby-remark-prismjs</a>, it was super simple to configure for use with gatsby-transformer-remark. I only needed to add it as a plugin in my Gatsby config</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// In your gatsby-config.js change this simple include:</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token string\\\">'gatsby-transformer-remark'</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token comment\\\">// to this 'configured' include:</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'gatsby-transformer-remark'</span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">'gatsby-remark-prismjs'</span> <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<h3>Congratulations, you now have annotated, but unstyled, code blocks.</h3>\\n<p>Now we need to include some CSS to apply some colors to our marked-up syntax. PrismJS has <a href=\\\"https://github.com/PrismJS/prism-themes\\\">plenty of excellent, standard themes</a>, but I wanted some simpler. It needed to be easily readable without being too jarring or removed from the style and theme of this site, so I looked around for something simple to extend.</p>\\n<p><a href=\\\"https://github.com/MoOx/sass-prism-theme-base\\\"><code class=\\\"language-text\\\">MoOx/sass-prism-theme-base</code></a> by <a href=\\\"https://github.com/MoOx\\\">MoOx</a> was a great base to build off of. The repo wasn't easily consumable by yarn, so I copied the <code class=\\\"language-text\\\">_prism.scss</code> for the base styles into my project to be used there. I may need to investigate sharing a variant of a base SASS PrismJS theme, as that's exactly what I was looking for.</p>\\n<p>I created a base <code class=\\\"language-text\\\">_syntax-theme.scss</code> file to contain my variables and setting overrides, it looks a little like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sass\\\"><code class=\\\"language-sass\\\"><span class=\\\"token comment\\\">// _syntax-theme.scss</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code</span><span class=\\\"token punctuation\\\">:</span>     #454390;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">:</span>    #e6d06c;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$keyword</span><span class=\\\"token punctuation\\\">:</span>  #f12769;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$operator</span><span class=\\\"token punctuation\\\">:</span> #f00;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$subtle</span><span class=\\\"token punctuation\\\">:</span>   #aaa;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$comment</span><span class=\\\"token punctuation\\\">:</span>  #999;</span>\\n\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color</span><span class=\\\"token punctuation\\\">:</span>         <span class=\\\"token variable\\\">$code</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-fade</span><span class=\\\"token punctuation\\\">:</span>    <span class=\\\"token variable\\\">$subtle</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-comment</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$comment</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-keyword</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$keyword</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-value</span><span class=\\\"token punctuation\\\">:</span>   <span class=\\\"token variable\\\">$code</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-string</span><span class=\\\"token punctuation\\\">:</span>  <span class=\\\"token variable\\\">$value</span>;</span>\\n\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-tab-size</span><span class=\\\"token punctuation\\\">:</span>      2;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-font-size</span><span class=\\\"token punctuation\\\">:</span> \\t   18px;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-line-height</span><span class=\\\"token punctuation\\\">:</span>\\t 1.7;</span>\\n\\n<span class=\\\"token atrule-line\\\"><span class=\\\"token atrule\\\">@import</span> \\\"prism\\\";</span></code></pre>\\n      </div>\\n<p>I hope this quick explanation helps get some more people out there blogging about code.</p>\\n<p>Later!</p>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2018-04-14 prismJS and and scss syntax theme.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2018-04-14T00:00:00.000Z\",\"path\":\"/posts/2018-04-14 prismJS and and scss syntax theme\",\"title\":\"Custom syntax highlighting for Gatsby\"}}},{\"node\":{\"excerpt\":\"Was a dope night. \\n \\n\",\"html\":\"<p>Was a dope night.</p>\\n<p><img src=\\\"/images/2018-01-19-frequencies/1.jpg\\\">\\n<img src=\\\"/images/2018-01-19-frequencies/2.jpg\\\">\\n<img src=\\\"/images/2018-01-19-frequencies/3.jpg\\\"></p>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2018-01-19 Frequencies.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2018-01-19T00:00:00.000Z\",\"path\":\"/posts/2018-01-19-Frequencies\",\"title\":\"Frequencies 2018-01-19\"}}},{\"node\":{\"excerpt\":\"\\n \\n \\n \\n \\n \\n \\n \\n \\n Go back to the homepage\",\"html\":\"<p><img src=\\\"/images/high-park/DSCF6519.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6557.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6561.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6587-2.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6632-2.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6555.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6559.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6566.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6598-2.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6645-2.jpg\\\"></p>\\n<p><a href=\\\"/\\\">Go back to the homepage</a></p>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2018-01-04 High Park.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2018-01-04T00:00:00.000Z\",\"path\":\"/posts/2018-01-04 High Park\",\"title\":\"A walk in High Park\"}}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---index-f227e646af3b26ae43f9.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"I've found it extremely helpful when writing React components using hooks to create new abstractions for my multiple hooks by grouping them into a single \\\"custom hook\\\". Reasoning about a single hook is very simple (literally composed of a single…\",\"html\":\"<p>I've found it extremely helpful when writing React components using hooks to create new abstractions for my multiple hooks by grouping them into a single \\\"custom hook\\\". Reasoning about a single hook is very simple (literally composed of a single element), but when your single component needs to keep track of multiple pieces of states, or actions that act on that state, things become tend to become more complex.</p>\\n<p>At this point it's a great idea to abstract away that complexity, exposing only what is relevant in the context of the consumer.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* MyApp.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">close</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Modal isVisible<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>isVisible<span class=\\\"token punctuation\\\">}</span> closeButton<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>actions<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span><span class=\\\"token constant\\\">I</span>'m <span class=\\\"token keyword\\\">in</span> a dialog<span class=\\\"token operator\\\">!</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>actions<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Close<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Modal<span class=\\\"token operator\\\">></span>\\n\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>actions<span class=\\\"token punctuation\\\">.</span>open<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Open dialog<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2>Step one: create an empty hook</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// add the hook</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useModalVisibility<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./use-modal-visibility'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// call it from your component</span>\\n  <span class=\\\"token keyword\\\">const</span> unusedValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Everything else unchanged....</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">close</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// rendering...</span></code></pre>\\n      </div>\\n<blockquote>\\n<p>☝️  This shouldn't affect our component at all.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* use-modal-visibility.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>This doesn't achieve much, but it doesn't break our code and our component should continue to work as normal 🤞</p>\\n<h2>Step two: Start pulling over hooks</h2>\\n<p>Now let's move over the bare minimum from our component into the hook. We should be extra careful to make sure that our tests still pass (you are testing your components, right?) and our component still works.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// add the hook</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useModalVisibility<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./use-modal-visibility'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// call it from your component</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Use the value/functions from useModalVisibility</span>\\n  <span class=\\\"token keyword\\\">const</span> actions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">open</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">close</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// rendering...</span></code></pre>\\n      </div>\\n<p>All our custom hook is doing so far is holding the <code class=\\\"language-text\\\">useState</code> logic, but not doing more than being a simple wrapper.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* use-modal-visibility.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2>Step three: Finalize the API/complete the abstraction</h2>\\n<p>Now let's move over the bare minimum from our component into the hook. We should be extra careful to make sure that our tests still pass (you are testing your components, right?) and our component still works.</p>\\n<blockquote>\\n<p>Since the <code class=\\\"language-text\\\">actions</code> block has no external referneces, we know that we can move these actions into our hook.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">/* use-modal-visibility.jsx */</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> setVisible<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// isolate the implementation logic</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">open</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">close</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">setVisible</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>open<span class=\\\"token punctuation\\\">,</span> close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>Having pulled all the state logic successfully into the custom hook, our stateless component is starting to look a whole lot more stateless again!</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// add the hook</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>useModalVisibility<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./use-modal-visibility'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyApp</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// call it from your component</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>isVisible<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>open<span class=\\\"token punctuation\\\">,</span> close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModalVisibility</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>main<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Modal isVisible<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>isVisible<span class=\\\"token punctuation\\\">}</span> closeButton<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span><span class=\\\"token constant\\\">I</span>'m <span class=\\\"token keyword\\\">in</span> a dialog<span class=\\\"token operator\\\">!</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>close<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Close<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Modal<span class=\\\"token operator\\\">></span>\\n\\n      <span class=\\\"token operator\\\">&lt;</span>button onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>open<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>Open dialog<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>main<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2019-12-15 Custom React Hooks.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2019-12-15T00:00:00.000Z\",\"path\":\"/posts/2019-12-15 Custom React Hooks\",\"title\":\"Refactoring a React component using custom hooks\"}}},{\"node\":{\"excerpt\":\"I wanted to add compile-time syntax highlighting to the code sections of this blog today, so I took a look around. I was already using gatsby-transformer-remark for markdown to HTML conversion of blog posts, so I needed to add a plugin that would…\",\"html\":\"<p>I wanted to add compile-time syntax highlighting to the code sections of this blog today, so I took a look around.</p>\\n<p>I was already using gatsby-transformer-remark for markdown to HTML conversion of blog posts, so I needed to add a plugin that would parse my code blocks into styleable html. Enter the handy Gatsby plugin <a href=\\\"https://github.com/chasm/gatsby-remark-prismjs\\\">gatsby-remark-prismjs</a>, it was super simple to configure for use with gatsby-transformer-remark. I only needed to add it as a plugin in my Gatsby config</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// In your gatsby-config.js change this simple include:</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token string\\\">'gatsby-transformer-remark'</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token comment\\\">// to this 'configured' include:</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'gatsby-transformer-remark'</span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">'gatsby-remark-prismjs'</span> <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<h3>Congratulations, you now have annotated, but unstyled, code blocks.</h3>\\n<p>Now we need to include some CSS to apply some colors to our marked-up syntax. PrismJS has <a href=\\\"https://github.com/PrismJS/prism-themes\\\">plenty of excellent, standard themes</a>, but I wanted some simpler. It needed to be easily readable without being too jarring or removed from the style and theme of this site, so I looked around for something simple to extend.</p>\\n<p><a href=\\\"https://github.com/MoOx/sass-prism-theme-base\\\"><code class=\\\"language-text\\\">MoOx/sass-prism-theme-base</code></a> by <a href=\\\"https://github.com/MoOx\\\">MoOx</a> was a great base to build off of. The repo wasn't easily consumable by yarn, so I copied the <code class=\\\"language-text\\\">_prism.scss</code> for the base styles into my project to be used there. I may need to investigate sharing a variant of a base SASS PrismJS theme, as that's exactly what I was looking for.</p>\\n<p>I created a base <code class=\\\"language-text\\\">_syntax-theme.scss</code> file to contain my variables and setting overrides, it looks a little like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sass\\\"><code class=\\\"language-sass\\\"><span class=\\\"token comment\\\">// _syntax-theme.scss</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code</span><span class=\\\"token punctuation\\\">:</span>     #454390;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$value</span><span class=\\\"token punctuation\\\">:</span>    #e6d06c;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$keyword</span><span class=\\\"token punctuation\\\">:</span>  #f12769;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$operator</span><span class=\\\"token punctuation\\\">:</span> #f00;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$subtle</span><span class=\\\"token punctuation\\\">:</span>   #aaa;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$comment</span><span class=\\\"token punctuation\\\">:</span>  #999;</span>\\n\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color</span><span class=\\\"token punctuation\\\">:</span>         <span class=\\\"token variable\\\">$code</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-fade</span><span class=\\\"token punctuation\\\">:</span>    <span class=\\\"token variable\\\">$subtle</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-comment</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$comment</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-keyword</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token variable\\\">$keyword</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-value</span><span class=\\\"token punctuation\\\">:</span>   <span class=\\\"token variable\\\">$code</span>;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-color-string</span><span class=\\\"token punctuation\\\">:</span>  <span class=\\\"token variable\\\">$value</span>;</span>\\n\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-tab-size</span><span class=\\\"token punctuation\\\">:</span>      2;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-font-size</span><span class=\\\"token punctuation\\\">:</span> \\t   18px;</span>\\n<span class=\\\"token variable-line\\\"><span class=\\\"token variable\\\">$code-line-height</span><span class=\\\"token punctuation\\\">:</span>\\t 1.7;</span>\\n\\n<span class=\\\"token atrule-line\\\"><span class=\\\"token atrule\\\">@import</span> \\\"prism\\\";</span></code></pre>\\n      </div>\\n<p>I hope this quick explanation helps get some more people out there blogging about code.</p>\\n<p>Later!</p>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2018-04-14 prismJS and and scss syntax theme.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2018-04-14T00:00:00.000Z\",\"path\":\"/posts/2018-04-14 prismJS and and scss syntax theme\",\"title\":\"Custom syntax highlighting for Gatsby\"}}},{\"node\":{\"excerpt\":\"Was a dope night. \\n \\n\",\"html\":\"<p>Was a dope night.</p>\\n<p><img src=\\\"/images/2018-01-19-frequencies/1.jpg\\\">\\n<img src=\\\"/images/2018-01-19-frequencies/2.jpg\\\">\\n<img src=\\\"/images/2018-01-19-frequencies/3.jpg\\\"></p>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2018-01-19 Frequencies.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2018-01-19T00:00:00.000Z\",\"path\":\"/posts/2018-01-19-Frequencies\",\"title\":\"Frequencies 2018-01-19\"}}},{\"node\":{\"excerpt\":\"\\n \\n \\n \\n \\n \\n \\n \\n \\n Go back to the homepage\",\"html\":\"<p><img src=\\\"/images/high-park/DSCF6519.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6557.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6561.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6587-2.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6632-2.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6555.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6559.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6566.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6598-2.jpg\\\">\\n<img src=\\\"/images/high-park/DSCF6645-2.jpg\\\"></p>\\n<p><a href=\\\"/\\\">Go back to the homepage</a></p>\",\"id\":\"/Users/cmarlow/Projects/cmarlow-static/posts/2018-01-04 High Park.md absPath of file >>> MarkdownRemark\",\"frontmatter\":{\"date\":\"2018-01-04T00:00:00.000Z\",\"path\":\"/posts/2018-01-04 High Park\",\"title\":\"A walk in High Park\"}}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/index.json\n// module id = 336\n// module chunks = 142629428675168"],"sourceRoot":""}
webpackJsonp([55089330772455],{342:function(e,a){e.exports={data:{markdownRemark:{id:"/Users/cmarlow/Projects/cmarlow-static/posts/2019-12-16 vim plugins are just dotfiles.md absPath of file >>> MarkdownRemark",html:'<p>There sometimes seems to be a perception that Vim plugins are all heavy, or somehow having a .vimrc or init.vim free of plugins is somehow perferable. I\'d like to clear some things up by demonstrating that Vim plugins are simply regular dotfiles, just in a different folder (or repo).</p>\n<h2>Vim\'s configuration</h2>\n<p>In our context we\'re referring to our vim\'s dotfiles, which would be at <code class="language-text">~/.config/vim/vimrc</code> (or <code class="language-text">~/.config/nvim/init.vim</code> if you\'re using Neovim.)</p>\n<p>Vim has more than just the <code class="language-text">rc</code> or <code class="language-text">init</code> entry point files though, there are a lot of other autoloaded folders and ways of loading configuration.</p>\n<h2>Well, what are dotfiles?</h2>\n<blockquote>\n<p>Dotfiles are plain text configuration files on Unix-y systems... They are called "dotfiles" as they typically are named with a leading <code class="language-text">.</code></p>\n<p>-- Chris and Gave @ Thoughbot</p>\n</blockquote>\n<p>In our context we\'re referring to our vim\'s dotfiles, which would be at <code class="language-text">~/.config/vim/vimrc</code> (or <code class="language-text">~/.config/nvim/init.vim</code> if you\'re using <a href="https://neovim.io/">Neovim</a>). However there are more to vim\'s configuration than just the initial config entry file.</p>\n<h2>Autoload folders</h2>\n<p>There are several folders that are automatically loaded by vim</p>\n<ul>\n<li><code class="language-text">ftdetect</code> run every time a new file of the filetype is loaded to dynamically detect and set the filetype</li>\n<li><code class="language-text">ftplugin</code> run everytime for a given filetype (not by filename)</li>\n<li><code class="language-text">plugins</code> always loaded when vim is loaded</li>\n<li><code class="language-text">...</code> others....</li>\n</ul>\n<p>There sometimes seems to be a perception that Vim plugins are all heavy, or somehow having a <code class="language-text">.vimrc</code> or <code class="language-text">init.vim</code> free of plugins is somehow perferable. I\'d like to clear some things up by demonstrating that Vim plugins are simply regular dotfiles, just in a different folder (or repo).</p>\n<h2>Let\'s create a super-basic plugin!</h2>\n<p>Let\'s create a plugin for editing markdown, we can start in our local dotfiles folder so navigate there (it\'s likely <code class="language-text">~/.config/vim/</code> or <code class="language-text">~/config/nvim/</code> if you\'re using Neovim, you\'ll need to create it if it doesn\'t exist).</p>\n<p>Now let\'s create a <code class="language-text">markdown.vim</code> to add behaviour to files using the markdown filetype. For this file to be autoloaded by Vim, we\'ll need to put it in Vim\'s <code class="language-text">ftplugin</code> folder and make sure that our filename matches the filetype we want to extend. Now we can add some simple key-bindings:</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim"><span class="token comment">" ~/.config/nvim/ftplugin/markdown.vim</span>\n<span class="token string">" Up/Down to navigate between headings (by searching for lines starting w/ 1+ "</span>#<span class="token comment">")</span>\nnnoremap <span class="token operator">&lt;</span>Up<span class="token operator">></span> <span class="token operator">?</span>^#\\<span class="token operator">+</span><span class="token operator">&lt;</span><span class="token keyword">cr</span><span class="token operator">></span>\nnnoremap <span class="token operator">&lt;</span>Down<span class="token operator">></span> <span class="token operator">/</span>^#\\<span class="token operator">+</span><span class="token operator">&lt;</span><span class="token keyword">cr</span><span class="token operator">></span></code></pre>\n      </div>\n<h2>Close and reopen Vim to make sure it works ðŸ¤ž</h2>\n<p>If all went well, we should be able to jump between markdown headings with the arrow keys now! Now let\'s create a new repo so we\'ve got a <em>real</em> real plugin, just like <a href="https://github.com/tpope">tpope</a> or <a href="https://github.com/junegunn">junegunn</a>!</p>\n<div class="gatsby-highlight">\n      <pre class="language-sh"><code class="language-sh">cd /path/to/your/projects\nmkdir markdown-navigator/\ncd markdown-navigator/\ngit init</code></pre>\n      </div>\n<p>Now we have somewhere to put our vim plugin, so let\'s repeat what we did in our local dotfiles repo:</p>\n<ul>\n<li>Create an <code class="language-text">ftplugin</code> folder</li>\n<li>Create a <code class="language-text">markdown.vim</code> file in that folder</li>\n<li>Commit and push the changes to github (or wherever you host your code.)</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim"><span class="token comment">" ./ftplugin/markdown.vim</span>\n<span class="token comment">" Up/Down to navigate between headings (by searching for lines starting with #s)</span>\nnnoremap <span class="token operator">&lt;</span>Up<span class="token operator">></span> <span class="token operator">?</span>^#\\<span class="token operator">+</span><span class="token operator">&lt;</span><span class="token keyword">cr</span><span class="token operator">></span>\nnnoremap <span class="token operator">&lt;</span>Down<span class="token operator">></span> <span class="token operator">/</span>^#\\<span class="token operator">+</span><span class="token operator">&lt;</span><span class="token keyword">cr</span><span class="token operator">></span></code></pre>\n      </div>\n<p>then save and push those changes:</p>\n<div class="gatsby-highlight">\n      <pre class="language-sh"><code class="language-sh">git add .\ngit commit -m &#39;Adds header navigation for markdown filetypes&#39;\n# obvs use your repo here... ðŸ•µ\ngit remote add origin https://github.com/perrupa/markdown-navigator.vim\ngit push origin master</code></pre>\n      </div>\n<p>To make sure the changes come from our plugin, we should make sure to delete the test code we wrote in our dotfiles. Please be sure to go back and delete the <code class="language-text">~/.config/vim/ftplugin/markdown.vim</code> file we created and restart vim to make sure we don\'t still have those mappings sticking around.</p>\n<p>At this point, you should be able to install your minimal plugin with your favourite plugin manager. I use <a href="https://github.com/junegunn/vim-plug">vim-plug</a>, it\'s always worked great for me but you might prefer another.</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim"><span class="token comment">" ~/.config/vim/vimrc</span>\n<span class="token comment">" ...</span>\n\n<span class="token keyword">call</span> plug#<span class="token function">begin</span><span class="token punctuation">(</span><span class="token string">\'~/.vim/bundle\'</span><span class="token punctuation">)</span>\n  <span class="token comment">" Other plugins...</span>\n\n  <span class="token comment">" Your GH repo for the plugin here ðŸ‘‡</span>\n  Plug <span class="token string">\'perrupa/markdown-navigator.vim\'</span>\n<span class="token keyword">call</span> plug#<span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Make sure to source your vimrc file, or restart vim, then run <code class="language-text">:PlugInstall</code> and you should see your plugin included with any other plugins you had added recently.</p>\n<p>By this point you should be cheering because you just created your very first Vim plugin! Now you can take all those neat tricks, custom command wrappers, domain-specific scripts or plugin-implementations you created in your dotfiles and share them with the world (or at least your coworkers)!</p>\n<p>I\'ve thrown up a tiny example of <a href="https://github.com/perrupa/markdown-navigator.vim">the markdown-navigator.vim plugin</a> on my <a href="https://github.com/perrupa/">Github account</a> for those who want to test it before creating their own.</p>',frontmatter:{date:"December 16, 2019",path:"/posts/2019-12-16 vim plugins are just dotfiles",title:"Vim plugins are just dotfiles"}}},pathContext:{}}}});
//# sourceMappingURL=path---posts-2019-12-16-vim-plugins-are-just-dotfiles-0013c7b30a8a5b9c060b.js.map